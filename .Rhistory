head(mtcars)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg,cyl,mean))
tapply(mtcars$mpg,mtcars$cyl,mean)
?with
tapply(mtcars$hp,mtcars$cyl,mean)
x <- tapply(mtcars$hp,mtcars$cyl,mean)
x[2] - x[1]
debug(ls)
ls
?ls
x<-1
ls(x)
library(datasets)
data(mtcars)
?mtcars
q
library(datasets)
data(mtcars)
library(datasets)
data(mtcars)
library(datasets)
data(mtcars)
y<- tapply(mtcars$hp,mtcars$cyl,mean)
y
y[3] - y[1]
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind, data = airquality , col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality | as.factor(Month), layout = c(5,1))
xyplot(Ozone~Wind| as.factor(Month), layout = c(5,1))
xyplot(Ozone~Wind| as.factor(Month), data = airquality,layout = c(5,1))
xyplot(Ozone~Wind|Month, data = airquality,layout = c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y~x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
pathtofile("plot1.R", local = TRUE)
View(pathtofile)
source(pathtofile("plot1.R"),local=TRUE)
myedit("plot2.R")
pathtofile("plot2.R", local = TRUE)
source(pathtofile("plot2.R"),local=TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color * cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color * cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors(), 10)
pal <- colorRamp(c("red","blue"))
pal(0)
pal(1)
pal(seq(0,1,len = 6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0Xcc
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe(p1)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue","green"), alpha = .5)
p3(5)
plot(x,y,pch = 19, col = rgb(0,.5,.5))
plot(x,y,pch = 19, col = rgb(0,.5,.5,.3))
cols <- brewer.pal(3,"BuGn")
showMe(cols)
colorRampPalette(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point","smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y = hwy, data = mpg, color = drv)
hwy
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ .)
qplot(displ, hwy, data = mpg, facets = . ~ drv , binwidth = 2)
qplot(hwy, data = mpg, facets = . ~ drv , binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, method = "loess")
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, method = "loess")
?qplot
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv, "loess")
123
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = . ~ drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color = "pink", size = 4, alpha = 1/2)
g + geom_point(color = aes(drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv), size = 4, alpha = 1/2)
g + geom_point(aes(color = drv)) + labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g + geom_point(aes(color = drv), size = 2, alpha = 1 / 2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = f)
g + geom_point(aes(color = drv), size = 2, alpha = 1 / 2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g + geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(x,y, type = "l", ylim = c(-3,3))
plot(myx,myy, type = "l", ylim = c(-3,3))
ggplot(myx, myy, data = testdat)
ggplot(aes(myx, myy), data = testdat)
g <- ggplot(testdat, aes(x = myx, y = myy)) + geom_line()
g <- ggplot(data = testdat, aes(x = myx, y = myy))
g <- ggplot(data = testdat, aes(x = myx, y = myy)) + geom_line()
g + geom_line()
g + geom_line(ylim = c(-3,3))
g + geom_line() + ylim(c(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(data = mpg, aes(x = displ, y = hwy, color = factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm" , se = FALSE, size = 2, color = "black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method = "lm" , se = FALSE, size = 2, color = "black") + labs(x = "Displacement" , y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497 / 30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497 / 30 , fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat , price, data = diamonds)
qplot(carat , price, data = diamonds , shape = cut)
qplot(carat , price, data = diamonds , color = cut)
qplot(carat , price, data = diamonds , color = cut, geom = c("point", "smooth"), method = "lm")
qplot(carat , price, data = diamonds , color = cut, geom = c("point", "smooth"))
qplot(carat , price, data = diamonds , color = cut, geom = c("point", "smooth")) + geom_smooth(method = "lm")
qplot(carat,price,data=diamonds, color=cut) + geom_smooth(method="lm")
qplot(carat,price,data=diamonds, color=cut , facets = . ~ cut) + geom_smooth(method="lm")
g <- ggplot(data = diamonds, aes(depth , print))
g <- ggplot(data = diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(data = diamonds, aes(depth, price))
g + geom_point(alpha = 1 / 3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha = 1 / 3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm" , size = 3, color = "pink")
g + geom_boxplot() + facet_grid(.~cut)
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lpoints
?splom
library(ggplot2)
qplot(votes, rating, data = movies) + geom_smooth()
library(ggplot2)
library(ggplot2movies)
qplot(votes, rating, data = movies) + geom_smooth()
?print.trellis
?trellis.par.set
library(ggplot2)
qplot(votes, rating, data = movies)
x <- rnorm(100)
y <- rnorm(100) + x
qplot(x,y)
qplot(x,y) + geom_smooth()
model <- lm(y~x)
summary(model)
qplot(x,y) + geom_smooth(se = FALSE)
40:1
scale(10:1)
plot(1:10,scale(10:1))
plot(1:10,scale(1:10))
library(swirl)
swirl()
cor(gpa_nor,gch_nor)
l_nor <- lm(gch_nor ~ gpa_nor)
cor(gch_nor, gpa_nor)
l_nor <- lm(gch_nor, gpa_nor)
l_nor <- lm(gch_nor ~gpa_nor)
fit <- lm(child ~ parent, galton)
sqrt(sum(fit$residuals)/ (n - 2) )
sqrt(sum(fit$residuals^2)/ (n - 2) )
summary(fit)$sigma
deviance(fit) / (n-2)
sqrt(deviance(fit) / (n-2))
mu <- mean(galton$child)
sTot <- sum((galton$child - mu)^2)
sRes <- deviance(fit$residuals)
head(fit$residuals)
sRes <- deviance(fit)
?deviance
1- sRes/ sTot
summary(fit)$r
summary(fit)$r.squared
cor(galton$child, galton$parent)
cor(galton$child, galton$parent)^2
ones <- rep(1, nrow(galton))
lm(child~ones + parent - 1, galton)
ones <- rep(1, nrow(galton))
swirl()
lm(child ~ parent, galton)
lm(child~1, galton)
head(trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
all <- lm(Fertility ~ ., swiss)
summary(all)
lm(Fertility ~ agriculture, swiss)
lm(Fertility ~ Agriculture, swiss)
summary(lm(Fertility ~ Agriculture, swiss))
corr(Examination, Education, swiss)
cor(Examination, Education, swiss)
cor(swiss$Examination, swiss$Education)
cor(swiss$Agriculture, swiss$Education)
makelms()
ec <- swiss$Examination + swiss$Catholic
efit <- lm(Fertility ~ . + ec, swiss)
all$coefficients - efit$coefficients
setwd("C://Users//LeoChaos//Desktop//Git//RepData_PeerAssessment1")
unzip("activity.zip")
library(dplyr)
actdata <- read.csv("activity.csv")
actdata <- tbl_df(actdata)
grouped_data <- group_by(actdata, date)
sum1 <- summarise(grouped_data, sum = sum(step))
res1 <- sum1$sum
grouped_data
sum1 <- summarise(grouped_data, sum = sum(steps))
res1 <- sum1$sum
sum1 <- summarise(grouped_data, sum = sum(steps,na.rm = TRUE))
res1 <- sum1$sum
hist(res1)
hist(res1,col = "red", breaks = 20)
hist(res1,col = "red", breaks = 10)
title(xlab = "total number of steps", main = "Total number of steps taken per day" )
hist(res1,col = "red")
title(xlab = "total number of steps", main = "Total number of steps taken per day" )
hist(res1,col = "red",xlab = "total number of steps", main = "Total number of steps taken per day" )
steps_mean <- mean(res1)
steps_median <- median(res1)
grouped_data_byinterval <- group_by(actdata, interval)
sum2 <- summarise(grouped_data_bydate, mean = mean(steps,na.rm = TRUE))
res2 <- sum2$mean
grouped_data_byinterval <- group_by(actdata, interval)
sum2 <- summarise(grouped_data_byinterval, mean = mean(steps,na.rm = TRUE))
res2 <- sum2$mean
plot(x = grouped_data_byinterval$interval, y = res2, type = "l")
title(xlab = "Time interval", ylab = "Average steps taken",
main = "Average steps taken in given time interval")
length(grouped_data_byinterval$interval)
plot(x = sum2$interval, y = res2, type = "l")
title(xlab = "Time interval", ylab = "Average steps taken",
main = "Average steps taken in given time interval")
plot(x = sum2$interval, y = res2, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
main = "Average steps taken in given time interval")
max_act_time <- which.max(res2)
sum2$interval
max_act_time
max(res2))
max_act_time <- res(which.max(res2))
max_act_time <- res2(which.max(res2))
max_act_time <- max(res2)
max_act_time <- sum2$interval[which.max(res)]
max_act_time <- sum2$interval[which.max(res2)]
sum(is.na(actdata$date))
sum(is.na(actdata$interval))
sum(is.na(actdata$steps))
grouped_data_bydate <- group_by(actdata, date)
sum1 <- summarise(grouped_data_bydate, sum = sum(steps,na.rm = TRUE))
res1 <- sum1$sum
hist(res1,col = "red",xlab = "Total number of steps", main = "Total number of steps taken per day" )
steps_mean <- mean(res1)
steps_median <- median(res1)
?group_indices
group_indices(grouped_data_bydate)
grouped_data_bydate <- cbind(grouped_data_bydate, id = group_indices(grouped_data_bydate))
grouped_data_bydate
steps_mean <- mean(res1)
steps_median <- median(res1)
for(i in 1: length(grouped_data_bydate$steps)){
if(is.na(grouped_data_bydate[i,1])){
grouped_data_bydate[i,1] <- res1[id]
}
}
sum3 <- summarise(grouped_data_bydate, sum = sum(steps,na.rm = TRUE))
res3 <- sum1$sum
hist(res3,col = "red",xlab = "Total number of steps", main = "Total number of steps taken per day" )
steps_mean_imputed <- mean(res3)
steps_median_imputed <- median(res3)
grouped_data_bydate <- cbind(grouped_data_bydate, id = group_indices(grouped_data_bydate))
for(i in 1: length(grouped_data_bydate$steps)){
if(is.na(grouped_data_bydate[i,1])){
grouped_data_bydate[i,1] <- res1[grouped_data_bydate[i,4]]
}
}
sum3 <- summarise(grouped_data_bydate, sum = sum(steps,na.rm = TRUE))
res3 <- sum1$sum
hist(res3,col = "red",xlab = "Total number of steps", main = "Total number of steps taken per day" )
steps_mean_imputed <- mean(res3)
steps_median_imputed <- median(res3)
grouped_data_bydate <- cbind(grouped_data_bydate, group_indices(grouped_data_bydate))
for(i in 1: length(grouped_data_bydate$steps)){
if(is.na(grouped_data_bydate[i,1])){
grouped_data_bydate[i,1] <- res1[grouped_data_bydate[i,4]]
}
}
sum3 <- summarise(grouped_data_bydate, sum = sum(steps,na.rm = TRUE))
res3 <- sum1$sum
hist(res3,col = "red",xlab = "Total number of steps", main = "Total number of steps taken per day" )
steps_mean_imputed <- mean(res3)
steps_median_imputed <- median(res3)
grouped_data_bydate <- group_by(actdata, date)
grouped_data_bydate <- cbind(grouped_data_bydate, group_indices(grouped_data_bydate))
for(i in 1: length(grouped_data_bydate$steps)){
if(is.na(grouped_data_bydate[i,1])){
grouped_data_bydate[i,1] <- res1[grouped_data_bydate[i,4]]
}
}
sum3 <- summarise(grouped_data_bydate, sum = sum(steps,na.rm = TRUE))
res3 <- sum1$sum
hist(res3,col = "red",xlab = "Total number of steps", main = "Total number of steps taken per day" )
steps_mean_imputed <- mean(res3)
steps_median_imputed <- median(res3)
newdata <- grouped_data_bydate
sum3 <- summarise(newdata, sum = sum(steps,na.rm = TRUE))
res3 <- sum1$sum
hist(res3,col = "red",xlab = "Total number of steps", main = "Total number of steps taken per day" )
steps_mean_imputed <- mean(res3)
steps_median_imputed <- median(res3)
sum(is.na(newdata$steps))
head(newdata)
weekdays(2012-10-01)
?weekdays
weekdays("2012-10-01")
weekdays(as.Date("2012-10-01", "%Y%M%D"))
?as.Date
as.Date("2012-10-01", "%Y%M%D")
as.Date("2012-10-01", "%Y-%M-%D")
as.Date("2012-10-01", "%y-%m-%d")
as.Date("2012-10-01", "%y-%m-%d")
as.Date("2012 10 01")
as.Date("20121001")
as.Date("2012/10/01")
as.Date("2012-10-01")
weekdays(as.Date("2012-10-01"))
?ungroup
newdata <- ungroup(newdata)
date <- newdata$date
weekday <- weekdays(as.Date(date))
state <- factor(levels = 2)
date <- newdata$date
weekday <- weekdays(as.Date(date))
state <- character()
for (i in 1: length(weekday)){
if(weekday[i] == "星期六" | weekday[i] ==  "星期日"){
state[i] <- "weekend"
}
else {
state[i] <- "weekday"
}
}
state <- as.factor(state)
dat <- mutate(newdata, state = state)
head(dat)
grouped_dat_byinterval <- group_by(dat, interval,state)
sum4 <- summarise(grouped_dat_byinterval, mean = mean(steps))
head(sum4)
sum4weekday <- sum4$state[sum4$state == "weekday"]
sum4weekend <- sum4$state[sum4$state == "weekend"]
sum4weekday
head(sum4weekday)
sum4weekday <- sum4[sum4$state == "weekday"]
sum4weekend <- sum4[sum4$state == "weekend"]
sum4 <- summarise(grouped_dat_byinterval, mean = mean(steps))
sum4weekday <- sum4[sum4$state == "weekday"]
sum4weekend <- sum4[sum4$state == "weekend"]
head(sum4)
head(sum4weekday )
sum4weekday <- sum4[state == "weekday"]
head(sum4weekday )
str(sum4)
sum4weekday <- subset(sum4, state == "weekday")
sum4weekday <- subset(sum4, state == "weekday")
sum4weekend <- subset(sum4, state == "weekend")
head(sum4weekday)
par(mfcol = c(2,1))
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
main = "Average steps taken in given time interval")
plot(x = sum4weekend$interval, y = sum4weekend$mean, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
main = "Average steps taken in given time interval")
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekend")
plot(x = sum4weekend$interval, y = sum4weekend$mean, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekday",
main = "Average steps taken in given time interval")
title(main = "Average steps taken in given time interval")
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekend")
plot(x = sum4weekend$interval, y = sum4weekend$mean, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekday")
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "n")
title(main = "Average steps taken in given time interval")
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekend")
plot(x = sum4weekend$interval, y = sum4weekend$mean, type = "l", xlab = "", ylab = "")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekday")
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "n")
par(mfcol = c(2,1))
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "l", xlab = "", ylab = "", col = "blue")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekend")
plot(x = sum4weekend$interval, y = sum4weekend$mean, type = "l", xlab = "", ylab = "",col = "blue")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekday")
?title
par(mfcol = c(2,1))
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "l", xlab = "", ylab = "", col = "blue")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekend",outer = TRUE)
plot(x = sum4weekend$interval, y = sum4weekend$mean, type = "l", xlab = "", ylab = "",col = "blue")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekday", outer = TRUE)
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "l", xlab = "", ylab = "", col = "blue")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekend")
plot(x = sum4weekend$interval, y = sum4weekend$mean, type = "l", xlab = "", ylab = "",col = "blue")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekday", outer = TRUE)
par(mfcol = c(2,1))
plot(x = sum4weekday$interval, y = sum4weekday$mean, type = "l", xlab = "", ylab = "", col = "blue")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekend",outer = TRUE)
plot(x = sum4weekend$interval, y = sum4weekend$mean, type = "l", xlab = "", ylab = "",col = "blue")
title(xlab = "Time interval", ylab = "Average steps taken",
sub = "weekday", outer = TRUE)
?lattice
?xyplot
library(lattice)
?xyplot
xyplot(mean ~ interval | state, sum4)
xyplot(mean ~ interval | state, sum4, type = "l",col = "blue",
xlab = "Time interval", ylab = "Average steps taken")
?xyplot
xyplot(mean ~ interval | state, sum4, type = "l",col = "blue",
xlab = "Time interval", ylab = "Average steps taken"
layout = c(2,1))
xyplot(mean ~ interval | state, sum4, type = "l",col = "blue",
xlab = "Time interval", ylab = "Average steps taken",
layout = c(2,1))
xyplot(mean ~ interval | state, sum4, type = "l",col = "blue",
xlab = "Time interval", ylab = "Average steps taken",
layout = c(2,1))
?xyplot
xyplot(mean ~ interval | state, sum4, type = "l",col = "blue",
xlab = "Time interval", ylab = "Average steps taken",
layout = c(1,2))
quit
quit()
```{r library, results="hide"}
library(dplyr)
```
?dev.copy
setwd("C://Users//LeoChaos//Desktop//Git//RepData_PeerAssessment1")
unzip("activity.zip")
library(dplyr)
actdata <- read.csv("activity.csv")
actdata <- tbl_df(actdata)
#What is mean total number of steps taken per day?
grouped_data_bydate <- group_by(actdata, date)
sum1 <- summarise(grouped_data_bydate, sum = sum(steps,na.rm = TRUE))
res1 <- sum1$sum
plot1 <- hist(res1,col = "red",xlab = "Total number of steps", main = "Total number of steps taken per day" )
dev.copy(png, "mean total number of steps taken per day.png")
dev.off()
